{"meta":{"title":"The IT Alerts","subtitle":"Sharing of ideas, knowledges and thoughts related to IT","description":null,"author":"The IT Alerts Team <team@theitalerts.com>","url":"http://www.theitalerts.com"},"pages":[{"title":"About Us","date":"2016-05-25T18:05:56.000Z","updated":"2016-05-30T16:47:22.046Z","comments":false,"path":"about/index.html","permalink":"http://www.theitalerts.com/about/index.html","excerpt":"","keywords":null,"text":"We are IT enthusiastic based on Kathmandu, Nepal. Lekhnath Rijal Lead developer @ Serofero Services &amp; Co-founder of this site Subarna Ghimire Assistant System and Network Engineer @ Neoteric Nepal Pvt. Ltd. &amp; Co-founder of this site .about-container{ padding-bottom:25px; } .thumbnail { border: 1px solid #efefef; padding: 4px; }","raw":null,"content":null}],"posts":[{"title":"BS to AD date conversion and vice versa","slug":"bs-to-ad-date-conversion-and-vice-versa","date":"2016-05-25T12:59:45.000Z","updated":"2016-05-30T16:11:13.887Z","comments":true,"path":"2016/05/25/bs-to-ad-date-conversion-and-vice-versa/","link":"","permalink":"http://www.theitalerts.com/2016/05/25/bs-to-ad-date-conversion-and-vice-versa/","excerpt":"Author: Lekhnath Rijal In this article we will learn to convert a date from Bikram Sambat (B.S.) to Anno Domini (A.D.) and vice versa using the Javascript programming language.","keywords":null,"text":"Author: Lekhnath Rijal In this article we will learn to convert a date from Bikram Sambat (B.S.) to Anno Domini (A.D.) and vice versa using the Javascript programming language. Although we are using Javascript for the date conversion it should not be much more tricky to port this application in some other languages out there. If you google ad to bs conversion, you’ll get bunch of links for web, mobile and desktop applications which converts the date for you, but if you wanted to know the actual logic behind this conversion mechanism then you are out of luck. I am here to provide you with some ideas just to make it work. Lets get startedA.D. to B.S. ConversionThe first step involves picking a B.S. date and its corresponding A.D. date, which acts as the lower limit for our converter application. In this example application those values are: 12START_DATE_BS = &#123;year: 1990, month: 1, date: 1&#125; //1st of Baisakh 1990START_DATE_AD = new Date(1933, 3, 12); //12th of April 1933 which corresponds to one day before START_DATE_BS Next we need to write the method which does the actual conversion, we call it ad2bs in our case. Give a quick glance at following code snippet, and don’t freak out as I am going to tell you whats going in there. Treat it like an unseen passage given in board examinations and read it roughly from top to bottom even if you don’t understand it much. This method convertDate.ad2bs accepts an instance of javascript Date object as only parameter which is adDate. Now we calculate the difference between input date (ie. adDate) and start ad date (ie. START_DATE_AD) as follows: 1daysFromStartDateAd = Math.floor( (adDate.getTime() - START_DATE_AD.getTime())/ ( 86400 * 1000) ); In case you stuck somewhere in above code: 123daysFromStartDateAd = (adDate.getTime() - START_DATE_AD.getTime());daysFromStartDateAd = daysFromStartDateAd / ( 86400 * 1000);daysFromStartDateAd = Math.floor(daysFromStartDateAd); Now the idea is to calculate how many years, months and days does daysFromStartDateAd means in B.S. Date system starting from START_DATE_BS, hence converting ad to bs. The following sections tells you how to grab years, months and date out of daysFromStartDateAd in step by step fashion. Which also describes the convertDate.ad2bs method. Determining the yearAssign START_DATE_BS to bsDate. Do a while loop until daysFromStartDateAd &gt; 0. Each iteration adds one to bs year (ie. bsDate.year) if daysFromStartDateAd is greater than sum of days in bs year (ie. daysInBsYear). daysInBsYear is reduced from daysFromStartDateAd after increment bs year by one. 1234567891011121314151617181920do &#123; var daysInBsYear; daysInBsYear = array_sum(convertDate.BS_DAYS_IN_YEAR[bsDate.year.toString()]); if (daysInBsYear &gt; daysFromStartDateAd) &#123; //TODO: Calculate month and date &#125; else &#123; // ## DETERMINING THE YEAR ## //Calculate year bsDate.year++; daysFromStartDateAd -= daysInBsYear; &#125; &#125; while (daysFromStartDateAd &gt; 0); Determining the monthBut if daysFromStartDateAd is less than daysInBsYear its time to calculate month and date rather than year out of daysInBsYear. Since there are 12 months in an year loop through each month using a for-loop. Each iteration adds one to the bs month (ie. bsDate.month) if daysFromStartDateAd is greater than number of days in bs month (ie. daysInBsMonth). daysInBsMonth is reduced from daysFromStartDateAd after increment bs month by one. 1234567891011121314151617181920212223242526if (daysInBsYear &gt; daysFromStartDateAd) &#123; for (var i = 0, daysInBsMonth; i &lt; convertDate.MONTHS_IN_YEAR; i++) &#123; daysInBsMonth = convertDate.BS_DAYS_IN_YEAR[bsDate.year.toString()][i]; if (daysInBsMonth &gt;= daysFromStartDateAd) &#123; //TODO: Calculate date &#125; else &#123; // ## DETERMINING THE MONTH ## //Calculate month bsDate.month++; daysFromStartDateAd -= daysInBsMonth; &#125; &#125;&#125; else &#123; //Calculate year ...&#125; Determining the dateBut if daysFromStartDateAd is less than or equals to daysInBsMonth then its the bs date value (ie. bsDate.date = daysFromStartDateAd).Assign null or 0 to daysFromStartDateAd to exit from the while loop. Then we break out of the for loop immediately after assignment. 12345678910if (daysInBsMonth &gt;= daysFromStartDateAd) &#123; // ## DETERMINING THE DATE ## //Calculate date bsDate.date = daysFromStartDateAd; daysFromStartDateAd = 0; break;&#125; Believe it or not, the conversion is complete! Return bsDate value and it’s done. B.S. to A.D. conversionConversion from B.S to A.D. is much more simpler compared to A.D. to B.S. conversion, which is accomplished in convertDate.bs2ad method. All we need to do is calculate the difference between input bs date (ie. bsDate) and start bs date (ie. START_DATE_BS). This is done by summing days in years, days in months and the date value from START_DATE_BS to bsDate. Convert it to milliseconds by multiplying the result by 86400 * 1000. Add it to number of milliseconds till start ad date (ie. START_DATE_AD.getTime()). Finally, construct the javascript date from that result to get the output. Live example","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://www.theitalerts.com/categories/Programming/"},{"name":"Javascript","slug":"Programming/Javascript","permalink":"http://www.theitalerts.com/categories/Programming/Javascript/"}],"tags":[{"name":"Date Conversion","slug":"Date-Conversion","permalink":"http://www.theitalerts.com/tags/Date-Conversion/"},{"name":"BS-AD Conversion","slug":"BS-AD-Conversion","permalink":"http://www.theitalerts.com/tags/BS-AD-Conversion/"}]}]}